@model NerolacPreviewApp.Models.Feedback

@{
    ViewBag.Title = "feedback";
}


<h2 style="color:red;font-weight:bold;font-size:25px;margin-left:30px;">Feedback</h2>  
    <a href="#" class="btn btn-warning buttons" onclick="feedbackList()" style="margin-left: 500px; margin-top: 5px;margin-bottom: 25px;"><i class="glyphicon glyphicon-list"></i> View History</a>

    <div class="modal fade" id="myModal2" data-backdrop="static" data-keyboard="false" style="width:900px;margin-left:285px;margin-top:45px;">
        <div class="modal-dialog" style="width:900px;">
            <div class="modal-content">
                <div class="modal-header" style="width:900px;">
                    <a href="#" id="clsBtn" class="close" data-dismiss="modal" style="color:red;margin-left:255px;">&times;</a>

                </div>
                <div class="modal-body" id="myModalBodyDiv2">

                </div>
            </div>
        </div>

    </div>
 

@using (Html.BeginForm("feedback", "TSO", FormMethod.Post, new { id = "CreateForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ProjectName, ViewBag.pn as IEnumerable<SelectListItem>, "Select Project Name", new { @class = "form-control", style = "width:300px;" })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.TSOId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TSOId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TSOId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Category, ViewBag.Category as IEnumerable<SelectListItem>, new { @class = "form-control", style = "width:300px;" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TSOInput, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.TSOInput, 5, 80, new { htmlAttributes = new { @class = "form-control", style = "max-width: 550px !important;" } })
            @Html.ValidationMessageFor(model => model.TSOInput, "", new { @class = "text-danger" })
        </div>


    </div>


    @*<h6>Any reply will appear below</h6>
        <hr class="my-12" />

        <div class="form-group">
            @Html.LabelFor(model => model.ReplyGiven, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReplyGiven, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReplyGiven, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.ReplyBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReplyBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReplyBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.RDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
            <input type="button" value="Clear" class="btn btn-info" onclick="Clear()" />
            <input type="button" id="btnExt" value="Exit" class="btn btn-warning" onclick="Exit()" />
        </div>
    </div>
</div>
    <div class="form-group">
        <p>
            <h6>For any queries , reach out to <b>myvizsupport@innovatussystems.com</b></h6>
            <h6>We value your feedback to provide you the best service.</h6>
            <h6>
                What you write here will reach us at myvizsupport@innovatussystems.com and we shall do our best to
                address them as soon as possible.
            </h6>
        </p>
    </div>

}

 
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        function Clear() {
            debugger;
            $(function () {
                $("#CreateForm")[0].reset();

            });
        };
        function Exit() {
            $(function () {
               
                    window.location.href = '@Url.Action("Index", "TSODashboard")';
               
            });
        };

        var feedbackList = function () {
            var url = '@Url.Action("feedbackList", "TSO")';
            $("#myModalBodyDiv2").load(url, function () {
                $("#myModal2").modal("show");
                $("#clsBtn").mouseover(function () {
                    $(this).attr("title", "Close");
                });
            })
        }
</script>

}